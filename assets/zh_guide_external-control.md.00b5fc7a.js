import{_ as s,c as n,o as a,a as l}from"./app.2cfadc10.js";const i=JSON.parse('{"title":"\u{1F90F} \u5916\u90E8\u63A7\u5236\u6D41\u7A0B","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/external-control.md","lastUpdated":null}'),o={name:"zh/guide/external-control.md"},p=l(`<h1 id="\u{1F90F}-\u5916\u90E8\u63A7\u5236\u6D41\u7A0B" tabindex="-1">\u{1F90F} \u5916\u90E8\u63A7\u5236\u6D41\u7A0B <a class="header-anchor" href="#\u{1F90F}-\u5916\u90E8\u63A7\u5236\u6D41\u7A0B" aria-hidden="true">#</a></h1><p>\u5982\u679C\u628A\u63A7\u5236\u6743\u90FD\u4EA4\u7ED9 Component\uFF0C\u5728\u4E00\u4E9B\u4F7F\u7528\u573A\u666F\u65F6\u4F1A\u53D7\u5230\u5230\u9650\u5236\uFF0CUnoverlays \u8F6C\u6362\u7684\u7EC4\u4EF6\u5141\u8BB8\u7528\u6237\u5728\u5916\u90E8\u63A7\u5236\u7EC4\u4EF6\u7684\u6D41\u7A0B</p><p><code>Model</code> \u7684\u8FD4\u56DE\u503C\u7684\u529F\u80FD\u4E0D\u4EC5\u4EC5\u5305\u62EC <code>Promise</code> \u5728\u6B64\u57FA\u7840\u8FD8\u6709 <code>resolve</code> \u548C <code>reject</code></p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Model </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineOverlay</span><span style="color:#A6ACCD;">(MyComponent)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> instance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Model</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* you props */</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// log: no</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yes</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// log: yes</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>\u7531\u4E8E\u6E32\u67D3\u9700\u8981\u7B49\u5F85\uFF0C promiser \u4E2D\u7684 <code>reject / resolve</code> \u4E0D\u80FD\u7ACB\u5373\u8C03\u7528\uFF0C\u4E00\u822C\u5EFA\u8BAE\u5728\u56DE\u8C03\u51FD\u6570\u5185\u90E8\u4E2D\u4F7F\u7528\u3002</p></blockquote>`,5),e=[p];function c(t,r,y,F,D,A){return a(),n("div",null,e)}var d=s(o,[["render",c]]);export{i as __pageData,d as default};
